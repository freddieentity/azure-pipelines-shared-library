# Get Secrets
# Lint
# Restore
# Build
# Unit tests
# Integration tests
# Publish build artifacts
# Publish container image
name: $(MICROSERVICE_NAME)
stages:
  # UnitTest
  - ${{ if eq(parameters.enableUnitTest, true) }}:
    - template: ${{variables['System.DefaultWorkingDirectory']}}/templates/test/unit-test.yaml
      parameters:
        stageName: UnitTest
        stageDependencies: 

  # SCA
  - ${{ if eq(parameters.enableSCA, true) }}:
    - template: ${{variables['System.DefaultWorkingDirectory']}}/templates/security/sca/owasp-dependency-check.yaml
      parameters:
        stageName: SCA
        stageDependencies:
          - UnitTest

  # SAST
  - ${{ if eq(parameters.enableSAST, true) }}:
    - template: ${{variables['System.DefaultWorkingDirectory']}}/templates/security/sast/sonarqube.yaml
      parameters:
        stageName: SAST
        stageDependencies:
          - UnitTest
        sonarQubeToken: 4ae523f01ada58d6b50e1667024d06494989a1c9
        sonarQubeOrganization: freddieentity
        sonarQubeProjectKey: complete-cicd
        sonarQubeSources: $(Pipeline.Workspace)
        sonarQubeHostURL: https://sonarcloud.io

  # Build
  - ${{ if eq(parameters.enableContainerImageBuild, true) }}:
    - template: ${{variables['System.DefaultWorkingDirectory']}}/templates/build/container-image-build.yaml
      parameters:
        stageName: ContainerImageBuild
        stageDependencies:
          - SCA
          - SAST
        containerRegistryName: ${{ parameters.containerRegistryName }}
        containerImageName: ${{ parameters.containerImageName }}
        containerImageTag: ${{ parameters.containerImageTag }}

  # Container Image Scan
  - ${{ if eq(parameters.enableContainerImageScan, true) }}:
    - template: ${{variables['System.DefaultWorkingDirectory']}}/templates/security/container/trivy.yaml
      parameters:
        stageName: ContainerImageScan
        stageDependencies:
          - ContainerImageBuild
        trivyTemplatePath: https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl
        containerRegistryName: ${{ parameters.containerRegistryName }}
        containerImageName: ${{ parameters.containerImageName }}
        containerImageTag: ${{ parameters.containerImageTag }}

  # Deployment
  - ${{ if eq(parameters.enablePreviewDeployment, true) }}:
    - template: ${{variables['System.DefaultWorkingDirectory']}}/templates/deploy/basic.yaml
      parameters:
        environment: Development
        stageName: Development
        stageDependencies:
          - ContainerImageBuild
        deploymentPoolName: Homelabpool


parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Development
  # - name: unitTestSourcesDirectory
  #   displayName: Unit Test Sources Directory
  #   type: string
  #   default: ''
  # - name: projectSourcesDirectory
  #   displayName: Project Sources Directory
  #   type: string
  #   default: ''
  - name: containerRegistryName
    type: string
    default: freddieentity.azurecr.io
  - name: containerImageName
    type: string
    default: weatherservice
  - name: containerImageTag
    type: string
    default: $(Build.BuildNumber)
  - name: enableUnitTest
    type: boolean
    default: true
  - name: enableSCA
    type: boolean
    default: true
  - name: enableSAST
    type: boolean
    default: true
  - name: enableContainerImageBuild
    type: boolean
    default: true
  - name: enableContainerImageScan
    type: boolean
    default: true
  - name: enablePreviewDeployment
    type: boolean
    default: true