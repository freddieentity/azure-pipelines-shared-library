parameters:
- name: environment
  type: string
  default: dev
- name: stageName
  type: string
  default: 
- name: stageDependencies 
  type: object 
  default: []
- name: sonarQubeToken
  type: string
- name: sonarQubeOrganization
  type: string
- name: sonarQubeProjectKey
  type: string
- name: sonarQubeSources
  type: string
- name: sonarQubeHostURL
  type: string

stages:
  - stage:
    displayName: ${{ parameters.stageName }}
    # condition: 
    dependsOn: ${{ parameters.stageDependencies }}
    # pool:
    jobs:
    - job: SonarQubeSASTScanning
      displayName: SonarQube SAST Scanning
      steps:
      - bash: |
          echo 'SonarQube setup...'
          # export SONAR_SCANNER_VERSION=4.7.0.2747
          # export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
          # curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
          # unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          # export PATH=$SONAR_SCANNER_HOME/bin:$PATH
          # export SONAR_SCANNER_OPTS="-server"
          # export SONAR_TOKEN=4ae523f01ada58d6b50e1667024d06494989a1c9
          # echo 'SonarQube scanning...'
          # sonar-scanner \
          #   -Dsonar.organization=freddieentity \
          #   -Dsonar.projectKey=complete-cicd \
          #   -Dsonar.sources=$(Pipeline.Workspace) \
          #   -Dsonar.host.url=https://sonarcloud.io
        displayName: SonarQube Setup and Scanning