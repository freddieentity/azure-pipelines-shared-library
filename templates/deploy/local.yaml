parameters:
- name: environment
  type: string
  default: dev
- name: enabled
  type: boolean
  default: true
- name: stageName
  type: string
  default: ''
- name: stageDependencies 
  type: object 
  default: 
- name: deploymentPoolName
  type: string
  default: 'Homelabpool'
- name: kubernetesCluster
  type: string
- name: resourceGroup
  type: string
- name: azureServiceConnection
  type: string
- name: containerRegistryName
  type: string
# - name: containerImageName
#   type: string
# - name: containerImageTag
#   type: string
# - name: projectTriggerID
#   type: string
# - name: pipelineTriggerID
#   type: string

stages:
  - stage: ${{ parameters.stageName }}
    displayName: ${{ parameters.stageName }}
    # condition: 
    dependsOn: ${{ parameters.stageDependencies }}
    # pool:
    jobs:
    - deployment: 
      # displayName: ${{ parameters.stageName }} 
      pool:
        name: ${{ parameters.deploymentPoolName }} 
        demands:
          - Homelabpool
      environment: ${{ parameters.environment }}
      strategy:
        runOnce:
          deploy:
            steps:
            - script: |
                cat $(Agent.BuildDirectory)/$(Resources.TriggeringAlias)/variables/pipeline.env
              displayName: 'Restore Environment Variables From Triggering CI Pipeline'
            - script: | 
                echo "CONTAINER_IMAGE_NAME:$(CONTAINER_IMAGE_NAME)"
                echo "CONTAINER_IMAGE_TAG:$(CONTAINER_IMAGE_TAG)"
              displayName: 'Print Triggering CI Pipeline Outputs'

            - task: AzureCLI@2
              displayName: 'Deploy Helm Chart Artifact'
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  kind create cluster --name=${{ parameters.kubernetesCluster }}
                  kubectl config use-context ${{ parameters.kubernetesCluster }}
                  helm upgrade --install $(CONTAINER_IMAGE_NAME) oci://${{ parameters.containerRegistryName }}/helm/$(CONTAINER_IMAGE_NAME) --version $(CONTAINER_IMAGE_TAG)
                  helm history $(CONTAINER_IMAGE_NAME)

            - task: AzureCLI@2
              displayName: 'Rollback Previous Helm Release'
              condition: failed()
              inputs:
                azureSubscription: ${{ parameters.azureServiceConnection }}
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  kubectl config use-context ${{ parameters.kubernetesCluster }}
                  helm rollback $(CONTAINER_IMAGE_NAME) 0 # Previous release
                  helm history $(CONTAINER_IMAGE_NAME)

            # - checkout: git://HomeLab/onlineboutique-helm-charts

            # - bash: | # when checkout one repo, the repo itself will be cloned to $(Agent.BuildDirectory)/s/
            #     kubectl config use-context kind-homelab
            #     helm upgrade -i ${{ parameters.microserviceName }} $(Agent.BuildDirectory)/s/${{ parameters.microserviceName }} \
            #     --set "ingress.hosts[0].host=abc.127.0.0.1.nip.io,ingress.hosts[0].paths[0].path=/,ingress.hosts[0].paths[0].pathType=Prefix"
 
            #   displayName: Helm Install
            
    # - job: HelmDeploy
    #   displayName: Helm Deploy
    #   dependsOn: HelmPackageAndPublish
    #   pool:
    #     name: Homelabpool
    #   steps:
    #   - bash: |
    #       kubectl config use-context kind-homelab
    #       helm upgrade --install ${{ parameters.containerImageName }} ${{ parameters.helmChartPath }}/${{ parameters.containerImageName }}-${{ parameters.containerImageTag }}.tgz
    #       helm history ${{ parameters.containerImageName }}
    #       # helm upgrade --install ${{ parameters.containerImageName }} oci://${{ parameters.containerRegistryName }}/helm/${{ parameters.containerImageName }}-${{ parameters.containerImageTag }}.tgz
    #     displayName: Helm Deploy